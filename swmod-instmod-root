#!/bin/bash

# Copyright (C) 2009-2015 Oliver Schulz <oliver.schulz@tu-dortmund.de>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.


SWMOD_INSTMOD_PATH=$( (echo "${0}" | grep -q '^/') && dirname "${0}" || (cd "`pwd`/`dirname \"${0}\"`" && pwd) )
. "${SWMOD_INSTMOD_PATH}/swmod-instmod-internal.sh"


BASIC_BUILD_OPTS="\
--fail-on-missing \
--enable-shared \
--enable-soversion \
"

ADDITIONAL_BUILD_OPTS="\
--enable-asimage \
--enable-astiff \
--enable-explicitlink \
--enable-fftw3 \
--enable-gdml \
--enable-gsl-shared \
--enable-http \
--enable-mathmore \
--enable-minuit2 \
--enable-mysql \
--enable-opengl \
--enable-python \
--enable-qt \
--enable-qtgsi \
--enable-roofit \
--enable-shadowpw \
--enable-ssl \
--enable-sqlite \
--enable-table \
--enable-unuran \
--enable-xml \
--enable-xft \
\
--disable-afs \
--disable-alien \
--disable-bonjour \
--disable-castor \
--disable-builtin-afterimage \
--disable-builtin-freetype \
--disable-builtin-ftgl \
--disable-builtin-pcre \
--disable-builtin-zlib \
--disable-chirp \
--disable-dcache \
--disable-gfal \
--disable-globus \
--disable-krb5 \
--disable-ldap \
--disable-monalisa \
--disable-odbc \
--disable-oracle \
--disable-pgsql \
--disable-pythia6 \
--disable-rfio \
--disable-rpath \
--disable-ruby \
--disable-sapdb \
--disable-srp \
--disable-xrootd \
"

DEFAULT_BUILD_OPTS=`echo ${BASIC_BUILD_OPTS} ${ADDITIONAL_BUILD_OPTS}`


swi_get_download_url () {
	echo "https://root.cern.ch/download/root_v${1}.source.tar.gz"
}

swi_get_version_no() {
	`(cd "${BUILDDIR}/" && (test -d .git && (git describe HEAD | sed 's/^v[ -_]\?//; s/^\([0-9]\+\)-\([0-9]\+\)-\([0-9]\+\)/\1.\2.\3/') || (cat build/version_number | sed 's|/|.|g')))`
}

swi_is_version_no() {
	echo "${1}" | grep -q '^[0-9]\+[.][0-9]\+[.][0-9]\+$'
}

swi_build_and_install() {
	export ROOTSYS="${SWMOD_INST_PREFIX}" \
	&& ./configure "$@" \
	&& make -j `swi_cpu_cores` \
	&& make install \
	&& echo '. "$SWMOD_PREFIX/bin/thisroot.sh"' > "${SWMOD_INST_PREFIX}/swmodrc.sh"	
}

WHAT=${1}; shift 1
swmod_instmod_install ROOT "${WHAT}" ${DEFAULT_BUILD_OPTS} "$@"
