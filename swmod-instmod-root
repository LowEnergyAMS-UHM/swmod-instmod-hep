#!/bin/bash

# Copyright (C) 2009-2015 Oliver Schulz <oliver.schulz@tu-dortmund.de>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.


PKG_NAME="ROOT"
PKG_TARNAME="root"

BASIC_BUILD_OPTS="
--fail-on-missing \
--enable-shared \
--enable-soversion \
"

ADDITIONAL_BUILD_OPTS="\
--enable-asimage \
--enable-astiff \
--enable-explicitlink \
--enable-fftw3 \
--enable-gdml \
--enable-gsl-shared \
--enable-http \
--enable-mathmore \
--enable-minuit2 \
--enable-mysql \
--enable-opengl \
--enable-python \
--enable-qt \
--enable-qtgsi \
--enable-roofit \
--enable-shadowpw \
--enable-ssl \
--enable-sqlite \
--enable-table \
--enable-unuran \
--enable-xml \
--enable-xft \
\
--disable-afs \
--disable-alien \
--disable-bonjour \
--disable-castor \
--disable-builtin-afterimage \
--disable-builtin-freetype \
--disable-builtin-ftgl \
--disable-builtin-pcre \
--disable-builtin-zlib \
--disable-chirp \
--disable-dcache \
--disable-gfal \
--disable-globus \
--disable-krb5 \
--disable-ldap \
--disable-monalisa \
--disable-odbc \
--disable-oracle \
--disable-pgsql \
--disable-pythia6 \
--disable-rfio \
--disable-rpath \
--disable-ruby \
--disable-sapdb \
--disable-srp \
--disable-xrootd \
"

DEFAULT_BUILD_OPTS=`echo ${BASIC_BUILD_OPTS} ${ADDITIONAL_BUILD_OPTS}`


WHAT="$1"

if [ -z "${WHAT}" ] ; then
	echo "Syntax: $0 WHAT [CONFIGURE_OPTION] ..." 1>&2
	echo 1>&2
	echo "For \"WHAT\", specify either a version number (e.g. \"6.02.01\") to download, or" 1>&2
	echo "the path to the ${PKG_NAME} source directory (may be an rsync-compatible" 1>&2
	echo "remote path)." 1>&2

	exit 1
fi

shift 1


if ! . swmod.sh init ; then
	echo "ERROR: swmod not available, aborting." 1>&2
	exit 1
fi

BUILDDIR=`mktemp -t -d "$(whoami)-build-${PKG_TARNAME}-XXXXXX"` || exit 1
echo "Build directory: \"${BUILDDIR}\""

error_clean_abort() {
	echo "ERROR: Installation failed." 1>&2
	rm -rf "${BUILDDIR}"
	exit 1
}


error_noclean_abort() {
	echo "ERROR: Installation failed, build directory: \"${BUILDDIR}\"." 1>&2
	exit 1
}


if (echo "${WHAT}" | grep -q '^[0-9]\+[.][0-9]\+[.][0-9]\+$') ; then
	PKG_VERSION="${WHAT}" \
	&& (
		cd "${BUILDDIR}" \
		&& DOWNLOAD_URL="https://root.cern.ch/download/root_v${PKG_VERSION}.source.tar.gz" \
		&& echo "Downloading ${PKG_NAME} version ${PKG_VERSION} from ${DOWNLOAD_URL}" \
		&& curl "${DOWNLOAD_URL}" |
			tar --strip-components 1 -C "${BUILDDIR}" --strip=1 -x -z \
	) || error_clean_abort
else
	PKG_FROM="${WHAT}" \
	&& echo "Copying ${PKG_NAME} sources from ${PKG_FROM} to ${BUILDDIR}" \
	&& rsync -rlpt "${PKG_FROM}/" "${BUILDDIR}/" \
	&& PKG_VERSION=`(cd "${BUILDDIR}/" && (test -d .git && (git describe HEAD | sed 's/^v[ -_]\?//; s/^\([0-9]\+\)-\([0-9]\+\)-\([0-9]\+\)/\1.\2.\3/') || (cat build/version_number | sed 's|/|.|g')))` \
	|| error_clean_abort
fi \
&& . swmod.sh setinst "${PKG_TARNAME}@${PKG_VERSION}" \
|| error_clean_abort

echo "Installing ${PKG_NAME} version ${PKG_VERSION}"
echo "Install prefix: ${SWMOD_INST_PREFIX}"
echo "Configure options:" $DEFAULT_BUILD_OPTS "$@"

NTHREADS=`grep -c '^processor' /proc/cpuinfo 2>/dev/null || sysctl -n hw.ncpu 2>/dev/null || echo 4`
echo "Building with ${NTHREADS} parallel threads."

(
	cd "${BUILDDIR}" \
	&& export ROOTSYS="${SWMOD_INST_PREFIX}" \
	&& ./configure $DEFAULT_BUILD_OPTS "$@" \
	&& make -j "$NTHREADS" \
	&& make install \
	&& echo '. "$SWMOD_PREFIX/bin/thisroot.sh"' > "${SWMOD_INST_PREFIX}/swmodrc.sh"	
) || error_noclean_abort

echo ""
echo "Successfully installed ${PKG_NAME} to \"${SWMOD_INST_PREFIX}\"."
echo "Use"
echo ""
echo "    swmod load ${PKG_TARNAME}@${PKG_VERSION}"
echo ""
echo "to load the newly installed ${PKG_NAME}."

rm -rf "${BUILDDIR}"
